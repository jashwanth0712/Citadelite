import type { Logic } from 'kea';
import type { AppProps } from '../types';
export interface vanillaWidgetLogicType extends Logic {
    actionCreators: {
        updateParams: (paramsToUpdate: Partial<AppProps>) => {
            type: 'update params (logic.vanillaWidgetLogic)';
            payload: {
                paramsToUpdate: Partial<AppProps>;
            };
        };
    };
    actionKeys: {
        'update params (logic.vanillaWidgetLogic)': 'updateParams';
    };
    actionTypes: {
        updateParams: 'update params (logic.vanillaWidgetLogic)';
    };
    actions: {
        updateParams: (paramsToUpdate: Partial<AppProps>) => void;
    };
    defaults: {
        params: AppProps;
    };
    events: {};
    key: undefined;
    listeners: {};
    path: ['logic', 'vanillaWidgetLogic'];
    pathString: 'logic.vanillaWidgetLogic';
    props: Record<string, unknown>;
    reducer: (state: any, action: any, fullState: any) => {
        params: AppProps;
    };
    reducers: {
        params: (state: AppProps, action: any, fullState: any) => AppProps;
    };
    selector: (state: any) => {
        params: AppProps;
    };
    selectors: {
        params: (state: any, props?: any) => AppProps;
    };
    sharedListeners: {};
    values: {
        params: AppProps;
    };
    _isKea: true;
    _isKeaWithKey: false;
}
