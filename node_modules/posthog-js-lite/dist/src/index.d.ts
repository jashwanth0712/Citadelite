import { PostHogAPIRequest, PostHogOptions, PostHogSession } from './types';
export declare function createInternalPostHogInstance(apiKey: string, options: PostHogOptions, globalThis: any): {
    options: Required<PostHogOptions>;
    session: PostHogSession;
    getDistinctId(): string;
    getContextProperties(): {
        $lib: string;
        $lib_version: string;
    };
    optedIn(): boolean;
    optIn(): void;
    optOut(): void;
    capture(event: string, properties?: {}): void;
    identify(distinctId: string | null, userProperties?: {}): void;
    queue: PostHogAPIRequest[];
    enqueue(apiRequest: PostHogAPIRequest): void;
    flush(): void;
    makeRequest: (events: PostHogAPIRequest[]) => Promise<void>;
};
