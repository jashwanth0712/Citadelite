import { LogicWrapper, BuiltLogic, Logic, Selector } from '../types';
export declare let pauseCounter: number;
export declare const isPaused: () => boolean;
export declare function useSelector(selector: Selector): any;
export declare function useValues<L extends Logic = Logic>(logic: BuiltLogic<L> | LogicWrapper<L>): L['values'];
export declare function useAllValues<L extends Logic = Logic>(logic: BuiltLogic<L> | LogicWrapper<L>): L['values'];
export declare function useActions<L extends Logic = Logic>(logic: BuiltLogic<L> | LogicWrapper<L>): L['actions'];
export declare function useMountedLogic<L extends Logic = Logic>(logic: BuiltLogic<L> | LogicWrapper<L>): BuiltLogic<L>;
export declare function batchChanges(callback: () => void): void;
