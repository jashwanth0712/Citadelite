import {
  useHuddleStore
} from "../chunk-DM7RIPEQ.mjs";
import "../chunk-N5JBSBUH.mjs";
import "../chunk-VAZJKIJW.mjs";
import "../chunk-OJOQ4W4X.mjs";
import "../chunk-DNIVQHGU.mjs";
import "../chunk-CRMTBXWZ.mjs";
import "../chunk-UL7IYC3S.mjs";
import "../chunk-LNN4OEFN.mjs";
import "../chunk-SO4JIC34.mjs";
import "../chunk-D6AGFJZ3.mjs";
import "../chunk-APOZGH7P.mjs";
import "../chunk-E3J4KYLN.mjs";
import "../chunk-RWDW3Z55.mjs";
import "../chunk-4GVG6VSP.mjs";
import "../chunk-45YZ7PTW.mjs";
import "../chunk-LGGEZBM7.mjs";
import "../chunk-ZTBTXBLL.mjs";
import "../chunk-EIL454WZ.mjs";
import "../chunk-PGV2CJQO.mjs";
import "../chunk-LRNXPFD3.mjs";
import "../chunk-FEVUFAUA.mjs";
import "../chunk-GAPPCOE7.mjs";
import "../chunk-7GGWN2HC.mjs";
import "../chunk-7JMHGAJI.mjs";
import "../chunk-SQKZRIEU.mjs";
import "../chunk-IBGL6YYT.mjs";

// src/hooks/usePeerShareAudioTrack.ts
import { useState } from "react";
var usePeerShareAudioTrack = (peerId) => {
  const [error, setError] = useState(null);
  const peerShareAudioStream = useHuddleStore(
    (state) => {
      var _a;
      return (_a = state.peers[peerId].consumers) == null ? void 0 : _a.shareAudio;
    }
  );
  if (!peerShareAudioStream) {
    setError("No stream found");
    return {
      error
    };
  }
  const { track, appData, id, isPaused } = peerShareAudioStream;
  const data = {
    id,
    isPaused,
    appData
  };
  return {
    track,
    data
  };
};
var usePeerShareAudioTrack_default = usePeerShareAudioTrack;
export {
  usePeerShareAudioTrack_default as default
};
