import {
  logger_default
} from "./chunk-IBGL6YYT.mjs";

// src/store/createGridSlice.ts
var createGridSlice = (set, get) => ({
  gridView: "grid",
  screenSharePeerId: null,
  setGridView: (gridView, peerId) => {
    if (gridView === "share" && !peerId) {
      logger_default.error({
        type: "error",
        message: "GridViewTypes.share requires peerId",
        gridView
      });
      return;
    }
    if (gridView === "share" && peerId) {
      set(() => ({
        gridView,
        screenSharePeerId: peerId
      }));
      return;
    }
    set(() => ({
      gridView,
      screenSharePeerId: null
    }));
  },
  enableScreenShare: (peerId) => {
    if (!peerId) {
      logger_default.error({
        type: "error",
        message: "GridViewTypes.share requires peerId",
        peerId
      });
      return;
    }
    set(() => ({
      gridView: "share",
      screenSharePeerId: peerId
    }));
  },
  disableScreenShare: (fallBackView = "grid") => {
    if (get().gridView === "share") {
      set(() => ({
        gridView: fallBackView,
        screenSharePeerId: null
      }));
    }
  }
});
var createGridSlice_default = createGridSlice;

export {
  createGridSlice_default
};
