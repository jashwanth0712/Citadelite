// src/store/createRoomStateSlice.ts
var createRoomStateSlice = (set, get) => ({
  roomState: {
    roomId: "",
    joined: false,
    droppedState: {
      type: "not-joined",
      isDropped: false
    },
    createdAt: 0,
    isRoomLocked: false
  },
  setRoomLockState: (isRoomLocked) => {
    const prevRoomState = get().roomState;
    set(() => ({
      roomState: {
        ...prevRoomState,
        isRoomLocked
      }
    }));
  },
  setRoomId: (roomId) => {
    const prevRoomState = get().roomState;
    set(() => ({
      roomState: {
        ...prevRoomState,
        roomId
      }
    }));
  },
  setJoined: () => {
    const prevRoomState = get().roomState;
    set(() => ({
      roomState: {
        ...prevRoomState,
        joined: true
      }
    }));
  },
  setCreatedAt: (createdAt) => {
    const prevRoomState = get().roomState;
    set(() => ({
      roomState: {
        ...prevRoomState,
        createdAt
      }
    }));
  },
  setDropState: (dropReason) => {
    const prevRoomState = get().roomState;
    set(() => ({
      roomState: {
        roomId: prevRoomState.roomId,
        joined: false,
        droppedState: {
          type: dropReason,
          isDropped: true
        },
        createdAt: prevRoomState.createdAt,
        isRoomLocked: prevRoomState.isRoomLocked
      }
    }));
  }
});
var createRoomStateSlice_default = createRoomStateSlice;

export {
  createRoomStateSlice_default
};
