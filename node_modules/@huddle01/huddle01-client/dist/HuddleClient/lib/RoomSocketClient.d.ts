import { HuddleStore } from './HuddleStore.js';
import protooClient from 'protoo-client';
import { ProtooUrlData, TLiveStreamObject } from '../../schema/index.js';
import { IStreamingPlatform } from '../../store/storeTypes.js';
import 'mediasoup-client';
import '../../store/store.js';
import 'zustand';
import '../../schema/enums/EHostControlType.js';
import '../../store/portStore/usePortStore.js';

declare class RoomSocketClient extends HuddleStore {
    socket: null | protooClient.Peer;
    apiKey: string | undefined;
    constructor(apiKey: ProtooUrlData['apiKey']);
    getSocket(roomId: string, peerId: string): protooClient.Peer;
    setSocket(roomId: string, peerId: string): void;
    startRecording({ address, sourceUrl, }: {
        address?: string;
        sourceUrl?: string;
    }): Promise<void>;
    stopRecording({ ipfs }: {
        ipfs: boolean;
    }): Promise<void>;
    startLiveStreaming(platform: IStreamingPlatform, streamObj?: TLiveStreamObject, sourceUrl?: string): Promise<void>;
    stopLiveStreaming(platform: IStreamingPlatform): Promise<void>;
    newSharedFile(fileDetails: any): Promise<void>;
}

export { RoomSocketClient };
